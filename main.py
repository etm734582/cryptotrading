import discord
import creditss
import random
from discord.ext import commands
import json
import requests

client = discord.Client()
bot = commands.Bot(command_prefix='!', help_command=None)
token = creditss.token

#consts
moneydifflist = [25000.0, 10000.0, 5000.0, 1000.0, 500.0]
comissiondifflist = [0.1*0.01, 0.2*0.01, 0.5*0.01, 1*0.01, 3*0.01]

# system funcs
def getrate(c1, c2):
    response = json.loads(requests.get(f'https://api.bittrex.com/api/v1.1/public/getticker?market={c2}-{c1}').text)
    if response['success'] == False:
        response = json.loads(requests.get(f'https://api.bittrex.com/api/v1.1/public/getticker?market={c1}-{c2}').text)
        if response['success'] == False:
            print(f'–û—à–∏–±–∫–∞:\n{response}')
            return (f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –≠—Ç–æ –º–æ–≥–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏ –ø–æ—Ç–æ–º—É —á—Ç–æ:\n1. –¢–∞–∫–æ–π –ø–∞—Ä—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n2. –í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å', False)
        else:
            return (f'–ö—É—Ä—Å {c1} –∫ {c2} —Ä–∞–≤–µ–Ω: 1 –∫ {1/response["result"]["Bid"]}', 1/response["result"]["Bid"])
    else:
        return (f'–ö—É—Ä—Å {c1} –∫ {c2} —Ä–∞–≤–µ–Ω: 1 –∫ {response["result"]["Bid"]}', response["result"]["Bid"])


def isuserreg(name):
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    if name in jsons['users'].keys():
        return True
    return False

def isuserplaying(name):
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    if jsons['users'][name]['settings']['ingame']:
        return True
    return False
    # with open('data.json', 'r') as file:
    #     jsons = json.load(file)
    # if name in jsons['users'].keys():
    #     print(1)

# sys bot funcs
@bot.command(name='help')
async def help(ctx):
    await ctx.send(f'–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–∏–º—É–ª–∏—Ä—É–µ—Ç —Ç–æ—Ä–≥–æ–≤–ª—é –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã (–∫—É—Ä—Å—ã –±–µ—Ä—É—Ç—Å—è —Å api.bittrex.com)\n\
    –°–∏—Å—Ç–µ–º–Ω—ã –∫–æ–º–∞–Ω–¥—ã:\n\
     - !help - –ø–æ–º–æ—â—å\n\
     - !reg - –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ\n\
     - !info - –¥–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\
     - !leavethesys - —É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã\n\
     - !play (—Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ –∫–æ–º–∏—Å—Å–∏–∏, —Å–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ –Ω–∞—á–∞–ª—å–Ω–æ–º—É –∫–∞–ø–∏—Ç–∞–ª—É) - –Ω–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é, –≤—ã–±—Ä–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç 0 –¥–æ 4 (—Å–º. !info)\n\
     - !leavethegame - –æ–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É (**!–ø—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–∏—Ç—Å—è!**)\n\
     - !settings - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\
    "–ì–µ–π–º–ø–ª–µ–π–Ω—ã–µ" –∫–æ–º–∞–Ω–¥—ã:\n\
     - !balance - —É–∑–Ω–∞—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π –ø–æ –≤—Å–µ–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º –∏ –¥–æ–ª–ª–∞—Ä—É\n\
     - !sell (–ø—Ä–æ–¥–∞–≤–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) (–∫–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–≤–∞–µ–º–æ–π –≤–∞–ª—é—Ç—ã (all - –æ–±–º—è—Ç—å –≤—Å—é –≤–∞–ª—é—Ç—É)) (–ø–æ–∫—É–ø–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) - –ø—Ä–æ–¥–∞—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏–ª–∏ –¥–æ–ª–ª–∞—Ä, —Å –∫–æ–º–∏—Å—Å–∏–µ–π (–ù—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å –≤—ã–ª—é—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: usd, eth, ltc)\n\
     - !rate (–ø—Ä–æ–¥–∞–≤–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) (–ø–æ–∫—É–ø–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) - —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–æ–π –ë–ï–ó –ö–û–ú–ò–°–°–ò–ò (–ù—É–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω–¥–µ–∫—Å –≤—ã–ª—é—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: usd, eth, ltc)\n\
     - !buy (–ø–æ–∫—É–ø–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–∞–µ–º–æ–π –≤–∞–ª—é—Ç—ã) (–ø—Ä–æ–¥–∞–≤–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞) - –ø–æ–∫—É–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏–ª–∏ –¥–æ–ª–ª–∞—Ä–∞, –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–º–∏—Å—Å–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –ø—Ä–æ–¥–∞–≤–∞–µ–º–æ–π –≤–∞–ª—é—Ç–µ')

@bot.command(name='info')
async def info(ctx):
    with open('info.txt', 'r', encoding='utf-8') as file:
        text = file.read()
        await ctx.send(text)

@bot.command(name='reg')
async def reg(ctx):
    name = str(ctx.author)
    if isuserreg(name):
        await ctx.send('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ')
        return
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    with open('data.json', 'w') as file:
        jsons['users'][name] = {
            'money': {
            },
            'settings': {
                'ingame': False
            }
        }
        jsons['users_amount']+=1

        json.dump(jsons, file, indent=3)

        await ctx.send('–í—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ')

@bot.command(name='leavethesys')
async def leavethesys(ctx):
    name = str(ctx.author)
    if not isuserreg(name):
        await ctx.send('*"–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –ø–æ–∫–∞ –Ω–µ –≤–æ—à–ª–∏"* - –ñ–∞–∫ –§—Ä–µ—Å–∫–æ')
        return

    with open('data.json', 'r') as file:
        jsons = json.load(file)
    with open('data.json', 'w') as file:
        del jsons['users'][name]
        jsons['users_amount']-=1

        json.dump(jsons, file, indent=3)
        jsons['users_amount'] -= 1
        await ctx.send('–ú—ã *–≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º* —á—Ç–æ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã, –∏ *—É–≤–µ—Ä–µ–Ω—ã*, —á—Ç–æ –æ–Ω–∏ *—Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤* –Ω–µ –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Ñ—Å–± –∏–ª–∏ –ø—Ä–æ–¥–∞–Ω—ã')

@bot.command(name='play')
async def play(ctx, *args):
    name = str(ctx.author)
    if len(args) != 2:
        await ctx.send('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ')
        return
    cmsdfclt, mndfclt = args
    if not (cmsdfclt in '01234' and mndfclt in '01234'):
        await ctx.send('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏')
        return
    if not isuserreg(name):
        await ctx.send('–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–π–¥–∏—Ç—å, —Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ (!reg), –∞ —Ç–æ –∫–∞–∫ –º–Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —Å–¥–µ–ª–∫–∏?')
        return
    if isuserplaying(name):
        await ctx.send('–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ, –∑–∞—á–µ–º –µ—â—ë —Ä–∞–∑ –≤ –Ω–µ—ë –≤—Ö–æ–¥–∏—Ç—å?')
        return


    with open('data.json', 'r') as file:
        jsons = json.load(file)
    with open('data.json', 'w') as file:
        jsons['users'][name] = {
            'money': {
                'usd': moneydifflist[int(cmsdfclt)]
            },
            'settings': {
                'ingame': True,
                'comissiondiff': int(cmsdfclt),
                'moneydiff': int(mndfclt),
                'comission': comissiondifflist[int(cmsdfclt)],
                'comission_factor': 1-comissiondifflist[int(cmsdfclt)],
                'comission_percent': f'{comissiondifflist[int(cmsdfclt)] * 100}%'
            }
        }
        json.dump(jsons, file, indent=3)
    await ctx.send('–í—ã –≤ –∏–≥—Ä–µ!')

@bot.command(name='leavethegame')
async def leavethegame(ctx):
    name = str(ctx.author)
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    if not isuserreg(name):
        await ctx.send('–≠–º–º... –≤—ã –Ω–µ –≤ –∏–≥—Ä–µ, –¥–∞ –∏... –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
        return
    if not isuserplaying(name):
        await ctx.send('–í—ã –¥–∞–∂–µ –Ω–µ –≤–æ—à–ª–∏ –≤ –∏–≥—Ä—É, –∞ —É–∂–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏? üòü')
        return
    with open('data.json', 'w') as file:
        jsons['users'][name] = {
            'money': {
            },
            'settings': {
                'ingame': False
            }
        }
        # print(jsons)

        json.dump(jsons, file, indent=3)

        await ctx.send('–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã')


# gameplay bot funcs

@bot.command(name='rate')
async def rate(ctx, *args):
    if len(args) != 2:
        await ctx.send('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ')
        return
    coin1, coin2 = args
    rate = getrate(coin1, coin2)
    await ctx.send(rate[0])

@bot.command(name='sell')
async def sell(ctx, *args):
    name = str(ctx.author)
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    money = jsons['users'][name]['money']
    comission_factor = jsons['users'][name]['settings']['comission_factor']
    if len(args) != 3:
        await ctx.send('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ')
        return
    coin1, qnty, coin2 = args

    if not isuserreg(name):
        await ctx.send('–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–π–¥–∏—Ç—å, —Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ (!reg), –∞ —Ç–æ –∫–∞–∫ –º–Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —Å–¥–µ–ª–∫–∏?')
    if not isuserplaying(name):
        await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∏–≥—Ä–µ')
    if qnty == 'all':
        qnty = money[coin1]
    else:
        try:
            qnty = float(qnty)
        except:
            await ctx.send('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ')
            return

    rate = getrate(coin1, coin2)

    if not rate[1]:
        await ctx.send(rate[0])
        return
    # with open('data.json', 'r') as file:
    #     jsons = json.load(file)
    # money = jsons['users'][name]['money']
    # comission_factor = jsons['users'][name]['settings']['comission_factor']
    #
    # if qnty == 'all':
    #     qnty = money[coin1]
    # else:
    #     qnty = float(qnty)

    if (not coin1 in money.keys()) or money[coin1] < qnty:
        await ctx.send(f'–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {coin1} –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Ç–∞–∫–æ–π —Å–¥–µ–ª–∫–∏')
        return

    if not coin2 in money.keys():
        money[coin2] = 0

    money[coin1] -= qnty
    com_qnty = qnty*comission_factor
    money[coin2] += com_qnty*rate[1]

    if money[coin1] == 0.0:
        del money[coin1]

    await ctx.send(f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ {qnty} (—Å —É—á—ë—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ {com_qnty}) {coin1} –∑–∞ {qnty*rate[1]} {coin2}')

    with open('data.json', 'w') as file:
        json.dump(jsons, file, indent=3)

@bot.command(name='buy')
async def buy(ctx, *args):
    name = str(ctx.author)
    if len(args) != 3:
        await ctx.send('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤—Å–µ –Ω—É–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –≤–≤–µ–ª–∏ –ª–∏—à–Ω–∏–µ')
        return
    coin1, qnty, coin2 = args
    if not isuserreg(name):
        await ctx.send('–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ç—Ä–µ–π–¥–∏—Ç—å, —Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ (!reg), –∞ —Ç–æ –∫–∞–∫ –º–Ω–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ —Å–¥–µ–ª–∫–∏?')
        return
    if not isuserplaying(name):
        await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∏–≥—Ä–µ')
        return
    try:
        qnty = float(qnty)
    except:
        await ctx.send('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ')
        return

    rate = getrate(coin1, coin2)

    if not rate[1]:
        await ctx.send(rate[0])
        return
    with open('data.json', 'r') as file:
        jsons = json.load(file)
    money = jsons['users'][name]['money']
    comission_factor = jsons['users'][name]['settings']['comission_factor']

    qnty = float(qnty)
    price = qnty*rate[1]/(1/comission_factor)

    if (not coin2 in money.keys()) or money[coin2] < price:
        await ctx.send(f'–ù–∞ –≤–∞—à–µ–º —Å—á—ë—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ {coin2} –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Ç–∞–∫–æ–π —Å–¥–µ–ª–∫–∏')
        return

    if not coin1 in money.keys():
        money[coin1] = 0

    money[coin2] -= price
    money[coin1] += qnty

    if money[coin2] == 0.0:
        del money[coin2]

    await ctx.send(f'–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ {qnty} {coin1} –∑–∞ {price} {coin2}')

    with open('data.json', 'w') as file:
        json.dump(jsons, file, indent=3)

@bot.command(name='balance')
async def balance(ctx):
    name = str(ctx.author)

    if not isuserreg(name):
        await ctx.send('–í–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ, –≤—ã –ø–æ—Ö–æ–∂–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
    if not isuserplaying(name):
        await ctx.send('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∏–≥—Ä–µ')

    with open ('data.json', 'r') as file:
        jsons = json.load(file)
    msg = '–í–∞—à–∏ —Å—á–µ—Ç–∞:\n'
    for i, j in jsons['users'][name]['money'].items():
        msg+=f' - {i}: {j}\n'
    await ctx.send(msg)

@bot.command(name='settings')
async def showsettings(ctx):
    name = str(ctx.author)
    if not isuserreg(name):
        await ctx.send('–í–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –≤ –Ω–∞—à–µ–π –±–∞–∑–µ, –≤—ã –ø–æ—Ö–æ–∂–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
    with open ('data.json', 'r') as file:
        jsons = json.load(file)

    showing_settings = jsons['bot_settings']['showing_settings']
    user_settings = jsons['users'][name]['settings']

    msg = '–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n'
    for i, j in user_settings.items():
        if i in showing_settings.keys():
            if not isuserplaying(name):
                j = '*–≤—ã –Ω–µ –≤ –∏–≥—Ä–µ*'
            msg+=f' - {showing_settings[i]}: {j}\n'
    await ctx.send(msg)

bot.run(token)


























# users_info = {'users_amount': 1,
#               'users':{
#                   '–ö–≤–∞–∫—à–∞':{
#                       'money':{
#                           'USD': 500,
#                           'BTC': 0.001
#                       },
#                       'settings':{
#                           'hide_moneyquantity': False
#                       }
#                   }
#               }
#           }
# with open('data.json', 'w') as file:
#     jsonl = json.dump(users_info, file, indent=3)
# with open('data.json', 'r') as file:
#     # a = file.read()
#     # print(a)
#     data = json.load(file)
# print(data)

# –æ—á –∫—Ä—É—Ç–∞—è —Ñ–∏–≥–Ω—è
# users_info_json = json.loads(json.dumps(users_info, indent=3))
# a = [j['money'] for i, j in users_info_json['users'].items()]
# for i in a:
#     i['USD'] +=357
